{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lukas\\\\pycharmprojects\\\\frontend\\\\src\\\\components\\\\Folders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/Folders.css';\nimport nice_plant from '../img/nice_plant.jpg';\nimport water_button from '../img/water_button.svg';\nimport fertilizer_button from '../img/fertilizer_button.svg';\nimport add_plant_button from '../img/addPlantButton.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Folders = () => {\n  _s();\n  const [plants, setPlants] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedFolder, setSelectedFolder] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:8000/app/plants/').then(response => {\n      setPlants(response.data);\n    }).catch(error => {\n      console.error('Error loading plants', error);\n    });\n  }, []);\n  const handleDelete = async plantId => {\n    try {\n      await fetch(`http://localhost:8000/app/delete-plant/${plantId}/`, {\n        method: 'DELETE'\n      });\n      setPlants(prevPlants => prevPlants.filter(plant => plant.id !== plantId));\n      console.log('Plant deleted successfully');\n    } catch (error) {\n      console.error('Error deleting plant', error);\n    }\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleFolderSelect = plantId => {\n    const selectedPlant = plants.find(plant => plant.id === plantId);\n    setSelectedFolder(selectedPlant);\n  };\n  const filteredPlants = plants.filter(plant => plant.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"base-container\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"folders_page_layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"plant_card\",\n          children: selectedFolder ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: selectedFolder.image,\n              alt: selectedFolder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plantcard-name\",\n              children: selectedFolder.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plantcard-water\",\n              children: [\"Watered: \", selectedFolder.water_last]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plantcard-fertilizer\",\n              children: [\"Fertilized: \", selectedFolder.fertilizer_last]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"plantcard-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"water-button\",\n                \"data-plant-id\": selectedFolder.id,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: water_button,\n                  alt: \"water_the_plant\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"fertilizer-button\",\n                \"data-plant-id\": selectedFolder.id,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: fertilizer_button,\n                  alt: \"fertilize_the_plant\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"search_bar_and_folders\",\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"search_bar\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Search by name\",\n              value: searchTerm,\n              onChange: handleSearchChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"folders\",\n            children: [filteredPlants.map(plant => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `folder-container ${selectedFolder && selectedFolder.id === plant.id ? 'selected' : ''}`,\n              \"data-plant-id\": plant.id,\n              \"data-water-last\": plant.water_last,\n              \"data-fertilizer-last\": plant.fertilizer_last,\n              onClick: () => handleFolderSelect(plant.id),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: plant.image,\n                alt: plant.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: plant.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: plant.tags && plant.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"tag\",\n                    children: tag\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notification\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDelete(plant.id),\n                    children: \"Usu\\u0144\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"folder-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/AddPlant\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: add_plant_button,\n                  alt: \"Add new plant\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"add new\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notification\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Folders, \"t2POVhtimNe3kTafEBfoYWiwzoc=\");\n_c = Folders;\nexport default Folders;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import '../css/Folders.css';\n// import nice_plant from '../img/nice_plant.jpg';\n// import water_button from '../img/water_button.svg';\n// import fertilizer_button from '../img/fertilizer_button.svg';\n// import add_plant_button from '../img/addPlantButton.svg';\n//\n// const Folders = () => {\n//   const [plants, setPlants] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [selectedFolderId, setSelectedFolderId] = useState(null);\n//\n//   useEffect(() => {\n//     axios.get('http://localhost:8000/app/plants/')\n//       .then(response => {\n//         setPlants(response.data);\n//       })\n//       .catch(error => {\n//         console.error('Error loading plants', error);\n//       });\n//   }, []);\n//\n//   const handleDelete = async (plantId) => {\n//     try {\n//       await fetch(`http://localhost:8000/app/delete-plant/${plantId}/`, {\n//         method: 'DELETE',\n//       });\n//       setPlants(prevPlants => prevPlants.filter(plant => plant.id !== plantId));\n//       console.log('Plant deleted successfully');\n//     } catch (error) {\n//       console.error('Error deleting plant', error);\n//     }\n//   };\n//\n//   const handleSearchChange = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n//\n//   const handleFolderSelect = (plantId) => {\n//     setSelectedFolderId(plantId);\n//   };\n//\n//   const filteredPlants = plants.filter(plant =>\n//     plant.name.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n//\n//   return (\n//     <div className=\"base-container\">\n//       <main>\n//         <section className = \"folders_page_layout\">\n//         <section className=\"plant_card\">\n//             <img src={nice_plant} alt=\"nice_plant\"></img>\n//               <div className=\"plantcard-name\">select a plant</div>\n//               <div className=\"plantcard-water\">Water</div>\n//               <div className=\"plantcard-fertilizer\">Fertilize</div>\n//               <div className=\"plantcard-buttons\">\n//                   <button className=\"water-button\" data-plant-id=\"0\">\n//                       <img src={water_button}  alt=\"water_the_plant\"></img>\n//                   </button>\n//                  <button className=\"fertilizer-button\" data-plant-id=\"0\">\n//                       <img src={fertilizer_button} alt=\"fertilize_the_plant\"></img>\n//                   </button>\n//               </div>\n//         </section>\n//         <section className=\"search_bar_and_folders\">\n//         <section className=\"search_bar\">\n//         <input\n//             type=\"text\"\n//             placeholder=\"Search by name\"\n//             value={searchTerm}\n//             onChange={handleSearchChange}\n//           />\n//         </section>\n//         <section className=\"folders\">\n//           {filteredPlants.map(plant => (\n//             <div key={plant.id} className={`folder-container ${selectedFolderId === plant.id ? 'selected' : ''}`}\n//                  data-plant-id={plant.id}\n//                  data-water-last={plant.water_last}\n//                  data-fertilizer-last={plant.fertilizer_last}\n//                  onClick={() => handleFolderSelect(plant.id)}\n//             >\n//               <img src={plant.image} alt={plant.name} />\n//               <div className=\"name-container\">\n//                 <h2>{plant.name}</h2>\n//                 <div>\n//                   {plant.tags && plant.tags.map((tag, index) => (\n//                     <span key={index} className=\"tag\">{tag}</span>\n//                   ))}\n//                 </div>\n//                 <div className=\"notification\">\n//                   <button onClick={() => handleDelete(plant.id)}>Usuń</button>\n//                 </div>\n//               </div>\n//             </div>\n//           ))}\n//           <div className=\"folder-container\">\n//             <a href=\"/AddPlant\">\n//               <img src={add_plant_button} alt=\"Add new plant\" />\n//             </a>\n//             <div className=\"name-container\">\n//               <h2>add new</h2>\n//               <div className=\"notification\"></div>\n//             </div>\n//           </div>\n//         </section>\n//         </section>\n//         </section>\n//       </main>\n//     </div>\n//   );\n// };\n//\n// export default Folders;\nvar _c;\n$RefreshReg$(_c, \"Folders\");","map":{"version":3,"names":["React","useState","useEffect","axios","nice_plant","water_button","fertilizer_button","add_plant_button","jsxDEV","_jsxDEV","Fragment","_Fragment","Folders","_s","plants","setPlants","searchTerm","setSearchTerm","selectedFolder","setSelectedFolder","get","then","response","data","catch","error","console","handleDelete","plantId","fetch","method","prevPlants","filter","plant","id","log","handleSearchChange","event","target","value","handleFolderSelect","selectedPlant","find","filteredPlants","name","toLowerCase","includes","className","children","src","image","alt","fileName","_jsxFileName","lineNumber","columnNumber","water_last","fertilizer_last","type","placeholder","onChange","map","onClick","tags","tag","index","href","_c","$RefreshReg$"],"sources":["C:/Users/lukas/pycharmprojects/frontend/src/components/Folders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../css/Folders.css';\r\nimport nice_plant from '../img/nice_plant.jpg';\r\nimport water_button from '../img/water_button.svg';\r\nimport fertilizer_button from '../img/fertilizer_button.svg';\r\nimport add_plant_button from '../img/addPlantButton.svg';\r\n\r\nconst Folders = () => {\r\n  const [plants, setPlants] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedFolder, setSelectedFolder] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:8000/app/plants/')\r\n      .then(response => {\r\n        setPlants(response.data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error loading plants', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleDelete = async (plantId) => {\r\n    try {\r\n      await fetch(`http://localhost:8000/app/delete-plant/${plantId}/`, {\r\n        method: 'DELETE',\r\n      });\r\n      setPlants(prevPlants => prevPlants.filter(plant => plant.id !== plantId));\r\n      console.log('Plant deleted successfully');\r\n    } catch (error) {\r\n      console.error('Error deleting plant', error);\r\n    }\r\n  };\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const handleFolderSelect = (plantId) => {\r\n    const selectedPlant = plants.find(plant => plant.id === plantId);\r\n    setSelectedFolder(selectedPlant);\r\n  };\r\n\r\n  const filteredPlants = plants.filter(plant =>\r\n    plant.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"base-container\">\r\n      <main>\r\n        <section className = \"folders_page_layout\">\r\n        <section className=\"plant_card\">\r\n            {selectedFolder ? (\r\n              <>\r\n                <img src={selectedFolder.image} alt={selectedFolder.name}></img>\r\n                <div className=\"plantcard-name\">{selectedFolder.name}</div>\r\n                <div className=\"plantcard-water\">Watered: {selectedFolder.water_last}</div>\r\n                <div className=\"plantcard-fertilizer\">Fertilized: {selectedFolder.fertilizer_last}</div>\r\n                <div className=\"plantcard-buttons\">\r\n                  <button className=\"water-button\" data-plant-id={selectedFolder.id}>\r\n                    <img src={water_button} alt=\"water_the_plant\"></img>\r\n                  </button>\r\n                  <button className=\"fertilizer-button\" data-plant-id={selectedFolder.id}>\r\n                    <img src={fertilizer_button} alt=\"fertilize_the_plant\"></img>\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div>\r\n                {/* Default content when no folder is selected */}\r\n              </div>\r\n            )}\r\n        </section>\r\n        <section className=\"search_bar_and_folders\">\r\n        <section className=\"search_bar\">\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Search by name\"\r\n            value={searchTerm}\r\n            onChange={handleSearchChange}\r\n          />\r\n        </section>\r\n        <section className=\"folders\">\r\n          {filteredPlants.map(plant => (\r\n            <div\r\n                 className={`folder-container ${selectedFolder && selectedFolder.id === plant.id ? 'selected' : ''}`}\r\n                 data-plant-id={plant.id}\r\n                 data-water-last={plant.water_last}\r\n                 data-fertilizer-last={plant.fertilizer_last}\r\n                 onClick={() => handleFolderSelect(plant.id)}\r\n            >\r\n              <img src={plant.image} alt={plant.name} />\r\n              <div className=\"name-container\">\r\n                <h2>{plant.name}</h2>\r\n                <div>\r\n                  {plant.tags && plant.tags.map((tag, index) => (\r\n                    <span key={index} className=\"tag\">{tag}</span>\r\n                  ))}\r\n                </div>\r\n                <div className=\"notification\">\r\n                  <button onClick={() => handleDelete(plant.id)}>Usuń</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <div className=\"folder-container\">\r\n            <a href=\"/AddPlant\">\r\n              <img src={add_plant_button} alt=\"Add new plant\" />\r\n            </a>\r\n            <div className=\"name-container\">\r\n              <h2>add new</h2>\r\n              <div className=\"notification\"></div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        </section>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Folders;\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import '../css/Folders.css';\r\n// import nice_plant from '../img/nice_plant.jpg';\r\n// import water_button from '../img/water_button.svg';\r\n// import fertilizer_button from '../img/fertilizer_button.svg';\r\n// import add_plant_button from '../img/addPlantButton.svg';\r\n//\r\n// const Folders = () => {\r\n//   const [plants, setPlants] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [selectedFolderId, setSelectedFolderId] = useState(null);\r\n//\r\n//   useEffect(() => {\r\n//     axios.get('http://localhost:8000/app/plants/')\r\n//       .then(response => {\r\n//         setPlants(response.data);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('Error loading plants', error);\r\n//       });\r\n//   }, []);\r\n//\r\n//   const handleDelete = async (plantId) => {\r\n//     try {\r\n//       await fetch(`http://localhost:8000/app/delete-plant/${plantId}/`, {\r\n//         method: 'DELETE',\r\n//       });\r\n//       setPlants(prevPlants => prevPlants.filter(plant => plant.id !== plantId));\r\n//       console.log('Plant deleted successfully');\r\n//     } catch (error) {\r\n//       console.error('Error deleting plant', error);\r\n//     }\r\n//   };\r\n//\r\n//   const handleSearchChange = (event) => {\r\n//     setSearchTerm(event.target.value);\r\n//   };\r\n//\r\n//   const handleFolderSelect = (plantId) => {\r\n//     setSelectedFolderId(plantId);\r\n//   };\r\n//\r\n//   const filteredPlants = plants.filter(plant =>\r\n//     plant.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n//\r\n//   return (\r\n//     <div className=\"base-container\">\r\n//       <main>\r\n//         <section className = \"folders_page_layout\">\r\n//         <section className=\"plant_card\">\r\n//             <img src={nice_plant} alt=\"nice_plant\"></img>\r\n//               <div className=\"plantcard-name\">select a plant</div>\r\n//               <div className=\"plantcard-water\">Water</div>\r\n//               <div className=\"plantcard-fertilizer\">Fertilize</div>\r\n//               <div className=\"plantcard-buttons\">\r\n//                   <button className=\"water-button\" data-plant-id=\"0\">\r\n//                       <img src={water_button}  alt=\"water_the_plant\"></img>\r\n//                   </button>\r\n//                  <button className=\"fertilizer-button\" data-plant-id=\"0\">\r\n//                       <img src={fertilizer_button} alt=\"fertilize_the_plant\"></img>\r\n//                   </button>\r\n//               </div>\r\n//         </section>\r\n//         <section className=\"search_bar_and_folders\">\r\n//         <section className=\"search_bar\">\r\n//         <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search by name\"\r\n//             value={searchTerm}\r\n//             onChange={handleSearchChange}\r\n//           />\r\n//         </section>\r\n//         <section className=\"folders\">\r\n//           {filteredPlants.map(plant => (\r\n//             <div key={plant.id} className={`folder-container ${selectedFolderId === plant.id ? 'selected' : ''}`}\r\n//                  data-plant-id={plant.id}\r\n//                  data-water-last={plant.water_last}\r\n//                  data-fertilizer-last={plant.fertilizer_last}\r\n//                  onClick={() => handleFolderSelect(plant.id)}\r\n//             >\r\n//               <img src={plant.image} alt={plant.name} />\r\n//               <div className=\"name-container\">\r\n//                 <h2>{plant.name}</h2>\r\n//                 <div>\r\n//                   {plant.tags && plant.tags.map((tag, index) => (\r\n//                     <span key={index} className=\"tag\">{tag}</span>\r\n//                   ))}\r\n//                 </div>\r\n//                 <div className=\"notification\">\r\n//                   <button onClick={() => handleDelete(plant.id)}>Usuń</button>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//           <div className=\"folder-container\">\r\n//             <a href=\"/AddPlant\">\r\n//               <img src={add_plant_button} alt=\"Add new plant\" />\r\n//             </a>\r\n//             <div className=\"name-container\">\r\n//               <h2>add new</h2>\r\n//               <div className=\"notification\"></div>\r\n//             </div>\r\n//           </div>\r\n//         </section>\r\n//         </section>\r\n//         </section>\r\n//       </main>\r\n//     </div>\r\n//   );\r\n// };\r\n//\r\n// export default Folders;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}